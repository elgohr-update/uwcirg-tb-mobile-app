version: '3.3'

services:
  selenium:
    image: selenium/standalone-firefox-debug
    depends_on:
      - client
    volumes:
      # The images need access to the hosts' shared memory;
      # see https://github.com/SeleniumHQ/docker-selenium#running-the-images
      - /dev/shm:/dev/shm
    expose:
      - 4444

  spec:
    build: ./spec
    depends_on:
      - selenium
    volumes:
      - ./spec:/spec
    environment:
      - SELENIUM_HOST=selenium
      - TEST_APP_HOST=client
      - TEST_APP_PORT=3000

  client:
    restart: always
    ports:
      - $PORT_CLIENT:3000
    build: .
    stdin_open: true
    tty: true
    command: yarn start
    depends_on:
      - web
    environment:
      NODE_ENV: development
      REACT_APP_API_PATH: $URL_API
      REACT_APP_REDIRECT_PATH: $URL_CLIENT/redirect
      REACT_APP_CPRO_PATH: $URL_CPRO
      REACT_APP_CLIENT_ID: skwIPnbi7N3uIvNysUbi0xfXwnWaIMR1MCJxz8rV0dGxeMJD
      CHOKIDAR_USEPOLLING: 'true'
      MINIO_HOST: localhost
    volumes:
      - .:/usr/src

  web:
    command: bash -c '/wait && flask run --host 0.0.0.0 --port 5000'
    build: ./server/webapp
    restart: always
    volumes:
      - source: ./server/webapp
        target: /home/flask/app/web
        type: bind
        read_only: true
      - "web:/usr/src/app"
    ports:
      - $PORT_API:5000
    links:
      - mpower-db
      - tbapp-db
    stdin_open: true
    tty: true
    depends_on:
      - mpower-db
      - tbapp-db
    environment:
      FLASK_ENV: development
      CPRO_DATABASE_USER: mpower
      CPRO_DATABASE_PASSWORD: mpower
      CPRO_DATABASE_NAME: mpower_demo
      TB_DATABASE_USER: tbapi
      TB_DATABASE_PASSWORD: tbapi
      TB_DATABASE_NAME: tbapi

      GUNICORN_ACCESSLOG: '-'
      GUNICORN_LOG_FILE: '-'
      GUNICORN_LOG_LEVEL: debug

      WAIT_HOSTS: mpower-db:3306, tbapp-db:3306
      WAIT_BEFORE_HOSTS: 2
      FLASK_APP: "tbapi/tbapi_app.py"
      FLASK_DEBUG: 1
      AUTHLIB_INSECURE_TRANSPORT: 'true'
      MODE: 'dev'

      REACT_APP_CLIENT_PATH: $URL_CLIENT
    networks:
      - tbapi

  mpower-db:
    restart: always
    image: mysql:5.7
    hostname: mpower-db
    volumes:
      - "./server/db/sql/mpower-db:/docker-entrypoint-initdb.d"
      - "./server/db/my.cnf:/etc/mysql/mysql.conf.d/my.cnf"
      - type: volume
        source: mpower-db-volume
        target: /var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: mpower
      MYSQL_PASSWORD: mpower
      MYSQL_DATABASE: mpower_demo
    networks:
      - tbapi

  tbapp-db:
    restart: always
    image: mysql:5.7
    hostname: tbapp-db
    volumes:
      - "./db/sql/tbapp-db:/docker-entrypoint-initdb.d"
      - "./server/db/sql/tbapp-db:/docker-entrypoint-initdb.d"
      - type: volume
        source: tbapp-db-volume
        target: /var/lib/mysql
    environment:
      MYSQL_USER: tbapi
      MYSQL_PASSWORD: tbapi
      MYSQL_DATABASE: tbapi
      MYSQL_ROOT_PASSWORD: root
    networks:
      - tbapi

  minio1:
    image: minio/minio:RELEASE.2018-11-06T01-01-02Z
    volumes:
      - data1:/data
    ports:
      - "9001:9000"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server http://minio1/data http://minio2/data http://minio3/data http://minio4/data

  minio2:
    image: minio/minio:RELEASE.2018-11-06T01-01-02Z
    volumes:
      - data2:/data
    ports:
      - "9002:9000"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server http://minio1/data http://minio2/data http://minio3/data http://minio4/data

  minio3:
    image: minio/minio:RELEASE.2018-11-06T01-01-02Z
    volumes:
      - data3:/data
    ports:
      - "9003:9000"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server http://minio1/data http://minio2/data http://minio3/data http://minio4/data

  minio4:
    image: minio/minio:RELEASE.2018-11-06T01-01-02Z
    volumes:
      - data4:/data
    ports:
      - "9004:9000"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server http://minio1/data http://minio2/data http://minio3/data http://minio4/data

volumes:
  web:
  mpower-db-volume:
  tbapp-db-volume:
  data1:
  data2:
  data3:
  data4:

networks:
  tbapi:
