version: '3.3'

services:
  client:
    restart: on-failure
    ports:
      - $PORT_CLIENT:80
    build:
      context: '.'
    environment:
      NODE_ENV: development
      REACT_APP_URL_API: $URL_API
      REACT_APP_CONTACT_LINK: $CONTACT_LINK
      REACT_APP_MESSAGE_API: $URL_MESSAGE_API
      REACT_APP_LANGUAGE: $LANGUAGE
      CHOKIDAR_USEPOLLING: 'true'

  db:
    restart: always
    image: postgres

  bucket:
    image: minio/minio
    environment:
      - MINIO_ACCESS_KEY=$MINIO_ACCESS_KEY
      - MINIO_SECRET_KEY=$MINIO_SECRET_KEY
    volumes:
      - source: user-files
        target: /files
        type: volume
    command: server /files
    ports: 
       - $PORT_MINIO:9000

  web:
    image: uwcirg/tb-foundation:$API_DOCKER_TAG
    environment:
      - DATA=postgres://postgres:postgres@db
      - PASSWORD
      - PORT=3000
      - RAILS_ENV=$ENVIRONMENT
      - SECRET_KEY_BASE=$SECRET_KEY_BASE
      - URL_API=$URL_API
      - URL_CORS=$URL_CORS
      - URL_MINIO=$URL_MINIO
      - MINIO_ACCESS_KEY=$MINIO_ACCESS_KEY
      - MINIO_SECRET_KEY=$MINIO_SECRET_KEY
      - RAILS_BASE_PASS=$RAILS_BASE_PASS
      - VAPID_PUBLIC_KEY=$VAPID_PUBLIC_KEY
      - VAPID_PRIVATE_KEY=$VAPID_PRIVATE_KEY
    ports:
      - $PORT_API:3000
    depends_on:
      - db
    restart: always
    volumes:
      - source: user-documents
        target: /ruby/backend/upload/
        type: volume


volumes:
    user-files: {}
    user-documents: {}
